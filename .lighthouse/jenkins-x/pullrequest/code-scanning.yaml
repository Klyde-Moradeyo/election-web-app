apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: code-scanning
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/ruby/pullrequest.yaml@versionStream
          name: ""
          resources:
            requests:
              cpu: 400m
              memory: 512Mi
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone-pr.yaml@versionStream
          name: ""
          resources: {}
        - image: ghcr.io/jenkins-x/jx-boot:3.2.256
          name: jx-variables
          resources: {}
          script: |
            #!/usr/bin/env sh
            jx gitops variables
            jx gitops pr variables
        - image: ghcr.io/jenkins-x/jx-registry:0.1.1
          name: check-registry
          resources: {}
        - image: ruby:3.0.3
          name: eslint-stylelint-prettier-lint 
          resources: {}
          script: |
            #!/bin/bash
            set -e # Makes terminal exit on error
            apt update
            apt install nodejs -y
            node -v
            apt install npm -y

            # For Prettier - ESLint - stylelint
            npm install --save-dev prettier-eslint
            npm install --save-dev prettier-eslint-cli
            npm install prettier-stylelint --save-dev

            echo "-------- Prettier - ESLint - stylelint | START --------"
            cd ./bin 
            chmod u+r+x error_handler.sh
            ./error_handler.sh "npm run fix-code"
            ./error_handler.sh "npm run fix-styles"
            cd ..
            echo "-------- Prettier - ESLint - stylelint | END --------"
        - image: ruby:3.0.3
          name: rubocop-lint
          resources: {}
          script: |
            #!/bin/bash
            set -e # Makes terminal exit on error
            bundle install # Standrd Ruby on Rails bundle install

            echo "-------- RUBOCOP | START --------"
            chmod u+r+x ./bin/error_handler.sh
            bundle exec ./bin/error_handler.sh "rubocop --parallel -a"
            echo "-------- RUBOCOP | END --------"
            bundle exec ./bin/error_handler.sh "./bin/git_commit_and_push.sh \"REFACTOR CODE SCAN - RuboCop Auto-Correct\""
        - image: ruby:3.0.3
          name: ruby-security-checks # Brakeman security test
          resources: {}
          script: |
            #!/bin/bash
            gem install brakeman
            echo "-------- BRAKEMAN | START --------"
            brakeman -aq
            echo "-------- BRAKEMAN | END --------"
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
